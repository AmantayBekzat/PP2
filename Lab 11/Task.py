import psycopg2
import csv
import os

# PostgreSQL-“ì–∞ “õ–æ—Å—ã–ª—É “Ø—à—ñ–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä–ª–µ—Ä–¥—ñ –æ—Ä–Ω–∞—Ç—É
conn = psycopg2.connect(
    database="postgres",
    user="postgres",
    password="1111",
    host="localhost",
    port="5432"
)

cur = conn.cursor()

# contacts –∫–µ—Å—Ç–µ—Å—ñ–Ω—ñ“£ –±–∞—Ä –µ–∫–µ–Ω—ñ–Ω —Ç–µ–∫—Å–µ—Ä—É —Ñ—É–Ω–∫—Ü–∏—è—Å—ã
def check_table_exists():
    try:
        cur.execute("SELECT to_regclass('public.contacts');")
        result = cur.fetchone()[0]
        if result is None:
            print("–ö–µ—Å—Ç–µ –∂–æ“õ, –æ–Ω—ã –∂–∞—Å–∞—É –∫–µ—Ä–µ–∫.")
            cur.execute("""
                CREATE TABLE contacts (
                    id SERIAL PRIMARY KEY,
                    name VARCHAR(100),
                    phone VARCHAR(20)
                );
            """)
            conn.commit()
            print("–ö–µ—Å—Ç–µ –∂–∞—Å–∞–ª–¥—ã.")
        else:
            print("–ö–µ—Å—Ç–µ –±–∞—Ä.")
    except Exception as e:
        print(f"“ö–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã: {e}")
        conn.rollback()

# “Æ–ª–≥—ñ (pattern) –±–æ–π—ã–Ω—à–∞ –±–∞—Ä–ª—ã“õ –∂–∞–∑–±–∞–ª–∞—Ä–¥—ã “õ–∞–π—Ç–∞—Ä–∞—Ç—ã–Ω —Ñ—É–Ω–∫—Ü–∏—è
def search_contacts(pattern):
    try:
        cur.execute("SELECT * FROM contacts WHERE name ILIKE %s OR phone ILIKE %s", (f'%{pattern}%', f'%{pattern}%'))
        rows = cur.fetchall()
        if rows:
            for row in rows:
                print(row)
        else:
            print("–ú”ô–ª—ñ–º–µ—Ç —Ç–∞–±—ã–ª–º–∞–¥—ã.")
    except Exception as e:
        print(f"“ö–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã: {e}")

# –ê—Ç—ã –º–µ–Ω —Ç–µ–ª–µ—Ñ–æ–Ω—ã –±–æ–π—ã–Ω—à–∞ –∂–∞“£–∞ –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã–Ω—ã –µ–Ω–≥—ñ–∑—É–≥–µ –∞—Ä–Ω–∞–ª“ì–∞–Ω –ø—Ä–æ—Ü–µ–¥—É—Ä–∞, –µ–≥–µ—Ä –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã –±–∞—Ä –±–æ–ª—Å–∞, —Ç–µ–ª–µ—Ñ–æ–Ω—ã–Ω –∂–∞“£–∞—Ä—Ç–∞–¥—ã
def insert_or_update_user(user_name, user_phone):
    try:
        cur.execute("SELECT id FROM contacts WHERE name = %s", (user_name,))
        result = cur.fetchone()
        if result:
            cur.execute("UPDATE contacts SET phone = %s WHERE name = %s", (user_phone, user_name))
            print(f"User {user_name} phone updated.")
        else:
            cur.execute("INSERT INTO contacts (name, phone) VALUES (%s, %s)", (user_name, user_phone))
            print(f"User {user_name} added.")
        conn.commit()
    except Exception as e:
        print(f"“ö–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã: {e}")
        conn.rollback()

# –ê—Ç—ã –º–µ–Ω —Ç–µ–ª–µ—Ñ–æ–Ω—ã —Ç—ñ–∑—ñ–º—ñ –±–æ–π—ã–Ω—à–∞ –∫”©–ø—Ç–µ–≥–µ–Ω –∂–∞“£–∞ –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã–ª–∞—Ä–¥—ã –µ–Ω–≥—ñ–∑—É –ø—Ä–æ—Ü–µ–¥—É—Ä–∞—Å—ã, —Ç–µ–ª–µ—Ñ–æ–Ω –¥“±—Ä—ã—Å—Ç—ã“ì—ã–Ω —Ç–µ–∫—Å–µ—Ä–µ–¥—ñ
def insert_multiple_users(users_list):
    try:
        for user_data in users_list:
            name_part, phone_part = user_data.split(',')
            if not phone_part.isdigit() or len(phone_part) < 10:
                print(f"“ö–∞—Ç–µ –¥–µ—Ä–µ–∫: {user_data} –¥“±—Ä—ã—Å –µ–º–µ—Å —Ç–µ–ª–µ—Ñ–æ–Ω.")
            else:
                insert_or_update_user(name_part, phone_part)
        print("–ë–∞—Ä–ª—ã“õ –¥–µ—Ä–µ–∫—Ç–µ—Ä “õ–æ—Å—ã–ª–¥—ã.")
    except Exception as e:
        print(f"“ö–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã: {e}")

# –ü–∞–≥–∏–Ω–∞—Ü–∏—è“ì–∞ –∞—Ä–Ω–∞–ª“ì–∞–Ω —Ñ—É–Ω–∫—Ü–∏—è (limit –∂”ô–Ω–µ offset)
def get_contacts_paginated(limit_size, offset_size):
    try:
        cur.execute("SELECT * FROM contacts LIMIT %s OFFSET %s", (limit_size, offset_size))
        rows = cur.fetchall()
        if rows:
            for row in rows:
                print(row)
        else:
            print("–ú”ô–ª—ñ–º–µ—Ç —Ç–∞–±—ã–ª–º–∞–¥—ã.")
    except Exception as e:
        print(f"“ö–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã: {e}")

# –ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã –∞—Ç—ã –Ω–µ–º–µ—Å–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã –±–æ–π—ã–Ω—à–∞ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–Ω—ñ ”©—à—ñ—Ä—É –ø—Ä–æ—Ü–µ–¥—É—Ä–∞—Å—ã
def delete_contact_by_user_or_phone(user_name=None, user_phone=None):
    try:
        if user_name:
            cur.execute("DELETE FROM contacts WHERE name = %s", (user_name,))
        elif user_phone:
            cur.execute("DELETE FROM contacts WHERE phone = %s", (user_phone,))
        conn.commit()
        print("‚ùå –ö–æ–Ω—Ç–∞–∫—Ç ”©—à—ñ—Ä—ñ–ª–¥—ñ.")
    except Exception as e:
        print(f"“ö–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã: {e}")
        conn.rollback()

# CSV —Ñ–∞–π–ª—ã–Ω–∞–Ω –¥–µ—Ä–µ–∫—Ç–µ—Ä–¥—ñ –µ–Ω–≥—ñ–∑—É —Ñ—É–Ω–∫—Ü–∏—è—Å—ã
def insert_from_csv(file_path):
    try:
        with open(file_path, 'r') as f:
            reader = csv.reader(f)
            for row in reader:
                if len(row) == 2:
                    insert_or_update_user(row[0], row[1])
                else:
                    print(f"–ï—Å–∫–µ—Ä—Ç—É: {row} –∂–æ–ª—ã –¥“±—Ä—ã—Å –µ–º–µ—Å —Ñ–æ—Ä–º–∞—Ç—Ç–∞.")
            print("üì• CSV –¥–µ—Ä–µ–∫—Ç–µ—Ä—ñ “õ–æ—Å—ã–ª–¥—ã.")
    except Exception as e:
        print(f"“ö–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã: {e}")

# “ö–æ–ª–º–µ–Ω –µ–Ω–≥—ñ–∑—É –∞—Ä“õ—ã–ª—ã –¥–µ—Ä–µ–∫—Ç–µ—Ä–¥—ñ –µ–Ω–≥—ñ–∑—É —Ñ—É–Ω–∫—Ü–∏—è—Å—ã
def insert_from_input():
    try:
        name = input("–ê—Ç—ã“£—ã–∑–¥—ã –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑: ")
        phone = input("–¢–µ–ª–µ—Ñ–æ–Ω –Ω”©–º—ñ—Ä—ñ: ")
        insert_or_update_user(name, phone)
    except Exception as e:
        print(f"“ö–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã: {e}")

# –ö–æ–Ω—Ç–∞–∫—Ç—ñ–Ω—ñ –∂–∞“£–∞—Ä—Ç—É —Ñ—É–Ω–∫—Ü–∏—è—Å—ã (ID –±–æ–π—ã–Ω—à–∞)
def update_contact():
    try:
        contact_id = input("“ö–∞–π ID –∂–∞“£–∞—Ä—Ç–∞—Å—ã“£? ")
        new_name = input("–ñ–∞“£–∞ –∞—Ç—ã: ")
        new_phone = input("–ñ–∞“£–∞ —Ç–µ–ª–µ—Ñ–æ–Ω: ")
        cur.execute("UPDATE contacts SET name = %s, phone = %s WHERE id = %s", (new_name, new_phone, contact_id))
        conn.commit()
        print("‚ôªÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç –∂–∞“£–∞—Ä—Ç—ã–ª–¥—ã.")
    except Exception as e:
        print(f"“ö–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã: {e}")
        conn.rollback()

# –§–∏–ª—å—Ç—Ä–º–µ–Ω —Å“±—Ä–∞–Ω—ã—Å –∂–∞—Å–∞—É —Ñ—É–Ω–∫—Ü–∏—è—Å—ã
def query_with_filter():
    try:
        keyword = input("–ê—Ç—ã –Ω–µ –Ω–æ–º–µ—Ä –±–æ–π—ã–Ω—à–∞ —ñ–∑–¥–µ: ")
        cur.execute("SELECT * FROM contacts WHERE name ILIKE %s OR phone ILIKE %s", (f'%{keyword}%', f'%{keyword}%'))
        rows = cur.fetchall()
        if rows:
            for row in rows:
                print(row)
        else:
            print("–ú”ô–ª—ñ–º–µ—Ç —Ç–∞–±—ã–ª–º–∞–¥—ã.")
    except Exception as e:
        print(f"“ö–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã: {e}")

# –ù–µ–≥—ñ–∑–≥—ñ –º–µ–Ω—é
def menu():
    run = True
    check_table_exists()

    while run:
        print("\nüì± PHONEBOOK MENU:")
        print("1 - Search by pattern")
        print("2 - Insert from CSV")
        print("3 - Insert from input")
        print("4 - Update contact")
        print("5 - Query with filter")
        print("6 - Delete contact")
        print("7 - Exit")
        print("8 - Paginate contacts")

        choice = input("–¢–∞“£–¥–∞“£—ã–∑ (1‚Äì8): ")

        if choice == '1':
            pattern = input("–Ü–∑–¥–µ—É “Ø—à—ñ–Ω “Ø–ª–≥—ñ –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑: ")
            search_contacts(pattern)
        elif choice == '2':
            file_path = input("CSV —Ñ–∞–π–ª–¥—ã“£ —Ç–æ–ª—ã“õ –∂–æ–ª—ã–Ω –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑: ")
            insert_from_csv(file_path)
        elif choice == '3':
            insert_from_input()
        elif choice == '4':
            update_contact()
        elif choice == '5':
            query_with_filter()
        elif choice == '6':
            user_name_or_phone = input("”®—à—ñ—Ä—ñ–ª–µ—Ç—ñ–Ω –∫–æ–Ω—Ç–∞–∫—Ç—ñ–Ω—ñ“£ –∞—Ç—ã –Ω–µ–º–µ—Å–µ —Ç–µ–ª–µ—Ñ–æ–Ω –Ω”©–º—ñ—Ä—ñ–Ω –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑: ")
            delete_contact_by_user_or_phone(user_name=user_name_or_phone)
        elif choice == '7':
            run = False
        elif choice == '8':
            limit_size = int(input("–ö”©—Ä—Å–µ—Ç—É —Å–∞–Ω—ã–Ω –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑: "))
            offset_size = int(input("–ë–∞—Å—Ç–∞–ª–∞—Ç—ã–Ω –æ—Ä—ã–Ω –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑: "))
            get_contacts_paginated(limit_size, offset_size)
        else:
            print("‚ùó “ö–∞—Ç–µ —Ç–∞“£–¥–∞—É.")

menu()

cur.close()
conn.close()
